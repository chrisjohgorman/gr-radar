/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(msg_manipulator.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0a3c3e6c0fe3bc461b5b551d1a4ca066)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/radar/msg_manipulator.h>
// pydoc.h is automatically generated in the build directory
#include <msg_manipulator_pydoc.h>

void bind_msg_manipulator(py::module& m)
{

    using msg_manipulator = ::gr::radar::msg_manipulator;


    py::class_<msg_manipulator,
               gr::block,
               gr::basic_block,
               std::shared_ptr<msg_manipulator>>(m, "msg_manipulator", D(msg_manipulator))

        .def(py::init(&msg_manipulator::make),
             py::arg("symbols"),
             py::arg("const_add"),
             py::arg("const_mult"),
             D(msg_manipulator, make))


        .def("set_const_add",
             &msg_manipulator::set_const_add,
             py::arg("val"),
             D(msg_manipulator, set_const_add))


        .def("set_const_mult",
             &msg_manipulator::set_const_mult,
             py::arg("val"),
             D(msg_manipulator, set_const_mult))

        ;
}
